ui <- fluidPage(
titlePanel("Titanic Prediction"),
sidebarLayout(
sidebarPanel(
sliderInput("age",
"age:",
min = 0,
max = 80,
step = 1,
value = 23.0),
radioButtons("pclass", label = h3("pclass"),
choices = list("1st class" = "1st", "2nd class" = "2nd", "3rd class" = "3rd"),
selected = "3rd"),
radioButtons("sex", label = h3("sex"),
choices = list("female" = "female", "male" = "male"),
selected = "male"),
sliderInput("sibsp",
"sibsp",
min = 0,
max = 8,
step = 1,
value = 1),
sliderInput("parch",
"parch",
min = 0,
max = 9,
step = 1,
value = 0)
),
mainPanel(
textOutput("prediction"),
plotOutput("tree")
)
)
)
server <- function(input, output) {
output$prediction <- renderText({
new_data = data.frame(
pclass = input$pclass,
age = input$age,
sex = input$sex,
sibsp = input$sibsp,
parch = input$parch
)
iris.predict <- predict(fit.titanic, new_data, type = "class")
paste("Your flower is a ", iris.predict, ".", sep = "")
})
output$tree <- renderPlot({
fancyRpartPlot(fit)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(rpart)
cache = list()
fit.titanic <- rpart(survived~., data = Titanicp)
summary(Titanicp)
ui <- fluidPage(
titlePanel("Titanic Prediction"),
sidebarLayout(
sidebarPanel(
sliderInput("age",
"age:",
min = 0,
max = 80,
step = 1,
value = 23.0),
radioButtons("pclass", label = h3("pclass"),
choices = list("1st class" = "1st", "2nd class" = "2nd", "3rd class" = "3rd"),
selected = "3rd"),
radioButtons("sex", label = h3("sex"),
choices = list("female" = "female", "male" = "male"),
selected = "male"),
sliderInput("sibsp",
"sibsp",
min = 0,
max = 8,
step = 1,
value = 1),
sliderInput("parch",
"parch",
min = 0,
max = 9,
step = 1,
value = 0)
),
mainPanel(
textOutput("prediction"),
plotOutput("tree")
)
)
)
server <- function(input, output) {
output$prediction <- renderText({
new_data = data.frame(
pclass = input$pclass,
age = input$age,
sex = input$sex,
sibsp = input$sibsp,
parch = input$parch
)
iris.predict <- predict(fit.titanic, new_data, type = "class")
paste("You", iris.predict, ".", sep = "")
})
output$tree <- renderPlot({
fancyRpartPlot(fit)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(rpart)
cache = list()
fit.titanic <- rpart(survived~., data = Titanicp)
summary(Titanicp)
ui <- fluidPage(
titlePanel("Titanic Prediction"),
sidebarLayout(
sidebarPanel(
sliderInput("age",
"age:",
min = 0,
max = 80,
step = 1,
value = 23.0),
radioButtons("pclass", label = h3("pclass"),
choices = list("1st class" = "1st", "2nd class" = "2nd", "3rd class" = "3rd"),
selected = "3rd"),
radioButtons("sex", label = h3("sex"),
choices = list("female" = "female", "male" = "male"),
selected = "male"),
sliderInput("sibsp",
"sibsp",
min = 0,
max = 8,
step = 1,
value = 1),
sliderInput("parch",
"parch",
min = 0,
max = 9,
step = 1,
value = 0)
),
mainPanel(
textOutput("prediction"),
plotOutput("tree")
)
)
)
server <- function(input, output) {
output$prediction <- renderText({
new_data = data.frame(
pclass = input$pclass,
age = input$age,
sex = input$sex,
sibsp = input$sibsp,
parch = input$parch
)
iris.predict <- predict(fit.titanic, new_data, type = "class")
paste("You ", iris.predict, ".", sep = "")
})
output$tree <- renderPlot({
fancyRpartPlot(fit)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(rpart)
cache = list()
fit.titanic <- rpart(survived~., data = Titanicp)
summary(Titanicp)
ui <- fluidPage(
titlePanel("Titanic Prediction"),
sidebarLayout(
sidebarPanel(
sliderInput("age",
"age:",
min = 0,
max = 80,
step = 1,
value = 23.0),
radioButtons("pclass", label = h3("pclass"),
choices = list("1st class" = "1st", "2nd class" = "2nd", "3rd class" = "3rd"),
selected = "3rd"),
radioButtons("sex", label = h3("sex"),
choices = list("female" = "female", "male" = "male"),
selected = "male"),
sliderInput("sibsp",
"sibsp",
min = 0,
max = 8,
step = 1,
value = 1),
sliderInput("parch",
"parch",
min = 0,
max = 9,
step = 1,
value = 0)
),
mainPanel(
textOutput("prediction"),
plotOutput("tree")
)
)
)
server <- function(input, output) {
output$prediction <- renderText({
new_data = data.frame(
pclass = input$pclass,
age = input$age,
sex = input$sex,
sibsp = input$sibsp,
parch = input$parch
)
iris.predict <- predict(fit.titanic, new_data, type = "class")
paste("You ", iris.predict, ".", sep = "")
})
output$tree <- renderPlot({
fancyRpartPlot(fit.titanic)
})
}
shinyApp(ui = ui, server = server)
library(rpart.plot)
install.packages("rpart.plot")
library(rpart.plot)
library(rpart.plot)
library(shiny)
library(rpart)
cache = list()
library(rpart.plot)
fit.titanic <- rpart(survived~., data = Titanicp)
summary(Titanicp)
ui <- fluidPage(
titlePanel("Titanic Prediction"),
sidebarLayout(
sidebarPanel(
sliderInput("age",
"age:",
min = 0,
max = 80,
step = 1,
value = 23.0),
radioButtons("pclass", label = h3("pclass"),
choices = list("1st class" = "1st", "2nd class" = "2nd", "3rd class" = "3rd"),
selected = "3rd"),
radioButtons("sex", label = h3("sex"),
choices = list("female" = "female", "male" = "male"),
selected = "male"),
sliderInput("sibsp",
"sibsp",
min = 0,
max = 8,
step = 1,
value = 1),
sliderInput("parch",
"parch",
min = 0,
max = 9,
step = 1,
value = 0)
),
mainPanel(
textOutput("prediction"),
plotOutput("tree")
)
)
)
server <- function(input, output) {
output$prediction <- renderText({
new_data = data.frame(
pclass = input$pclass,
age = input$age,
sex = input$sex,
sibsp = input$sibsp,
parch = input$parch
)
iris.predict <- predict(fit.titanic, new_data, type = "class")
paste("You ", iris.predict, ".", sep = "")
})
output$tree <- renderPlot({
rpart.plot(fit.titanic)
})
}
shinyApp(ui = ui, server = server)
?Titanicp
library(shiny)
library(rpart)
library(rpart.plot)
cache = list()
fit.titanic <- rpart(survived~., data = Titanicp)
summary(Titanicp)
ui <- fluidPage(
titlePanel("Titanic Prediction"),
sidebarLayout(
sidebarPanel(
sliderInput("age",
"Your Age is:",
min = 0,
max = 80,
step = 1,
value = 23.0),
radioButtons("pclass", label = h3("Your class is:"),
choices = list("1st class" = "1st", "2nd class" = "2nd", "3rd class" = "3rd"),
selected = "3rd"),
radioButtons("sex", label = h3("Your gender is:"),
choices = list("female" = "female", "male" = "male"),
selected = "male"),
sliderInput("sibsp",
"You have # sibling(s) aboard with you",
min = 0,
max = 8,
step = 1,
value = 1),
sliderInput("parch",
"You have # parents/children aboard with you",
min = 0,
max = 9,
step = 1,
value = 0)
),
mainPanel(
textOutput("prediction"),
plotOutput("tree")
)
)
)
server <- function(input, output) {
output$prediction <- renderText({
new_data = data.frame(
pclass = input$pclass,
age = input$age,
sex = input$sex,
sibsp = input$sibsp,
parch = input$parch
)
titanic.predict <- predict(fit.titanic, new_data, type = "class")
paste("You ", titanic.predict, ".", sep = "")
})
output$tree <- renderPlot({
rpart.plot(fit.titanic)
})
}
shinyApp(ui = ui, server = server)
library(shiny)
library(rpart)
library(rpart.plot)
cache = list()
fit.titanic <- rpart(survived~., data = Titanicp)
summary(Titanicp)
ui <- fluidPage(
titlePanel("Titanic Prediction"),
sidebarLayout(
sidebarPanel(
sliderInput("age",
"Your Age is:",
min = 0,
max = 80,
step = 1,
value = 23.0),
radioButtons("pclass", label = h3("Your class is:"),
choices = list("1st class" = "1st", "2nd class" = "2nd", "3rd class" = "3rd"),
selected = "3rd"),
radioButtons("sex", label = h3("Your gender is:"),
choices = list("female" = "female", "male" = "male"),
selected = "male"),
sliderInput("sibsp",
"You have # sibling(s) aboard with you",
min = 0,
max = 8,
step = 1,
value = 1),
sliderInput("parch",
"You have # parents/children aboard with you",
min = 0,
max = 9,
step = 1,
value = 0)
),
mainPanel(
textOutput("prediction"),
plotOutput("tree")
)
)
)
server <- function(input, output) {
output$prediction <- renderText({
new_data = data.frame(
pclass = input$pclass,
age = input$age,
sex = input$sex,
sibsp = input$sibsp,
parch = input$parch
)
titanic.predict <- predict(fit.titanic, new_data, type = "class")
paste("You ", titanic.predict, ".", sep = "")
})
output$tree <- renderPlot({
rpart.plot(fit.titanic)
})
}
shinyApp(ui = ui, server = server)
?rpart.plot
library(shiny)
library(rpart)
library(rpart.plot)
cache = list()
fit.titanic <- rpart(survived~., data = Titanicp)
summary(Titanicp)
ui <- fluidPage(
titlePanel("Titanic Prediction"),
sidebarLayout(
sidebarPanel(
sliderInput("age",
"Your Age is:",
min = 0,
max = 80,
step = 1,
value = 23.0),
radioButtons("pclass", label = h3("Your class is:"),
choices = list("1st class" = "1st", "2nd class" = "2nd", "3rd class" = "3rd"),
selected = "3rd"),
radioButtons("sex", label = h3("Your gender is:"),
choices = list("female" = "female", "male" = "male"),
selected = "male"),
sliderInput("sibsp",
"You have # sibling(s) aboard with you",
min = 0,
max = 8,
step = 1,
value = 1),
sliderInput("parch",
"You have # parents/children aboard with you",
min = 0,
max = 9,
step = 1,
value = 0)
),
mainPanel(
textOutput("prediction"),
plotOutput("tree")
)
)
)
server <- function(input, output) {
output$prediction <- renderText({
new_data = data.frame(
pclass = input$pclass,
age = input$age,
sex = input$sex,
sibsp = input$sibsp,
parch = input$parch
)
titanic.predict <- predict(fit.titanic, new_data, type = "class")
paste("You ", titanic.predict, ".", sep = "")
})
output$tree <- renderPlot({
fancyRpartPlot(fit.titanic)
})
}
shinyApp(ui = ui, server = server)
runApp('Documents/iXperience/titanic shiny.R')
runApp('Documents/iXperience/titanic shiny.R')
runApp('Documents/iXperience/titanic shiny.R')
install.packages("rattle")
library(rattle)
install.packages("RGrk2")
library(shiny); runApp('Documents/iXperience/R-34-T-data-products-shiny-iris.R')
runApp('Documents/iXperience/R-34-T-data-products-shiny-iris.R')
runApp('Documents/iXperience/titanic shiny.R')
install.packages("rpart.plot")
runApp('Documents/iXperience/titanic shiny.R')
runApp('Documents/iXperience/titanic shiny.R')
runApp('Documents/iXperience/titanic shiny.R')
install.packages("vcdExtra")
library(shiny)
library(rpart)
library(rpart.plot)
library(vcdExtra)
runApp('Documents/iXperience/titanic shiny.R')
install.packages("rattle")
runApp('Documents/iXperience/titanic shiny.R')
runApp('Documents/iXperience/titanic shiny.R')
library(ggplot2)
library(rplyr)
library(readr)
foodinspect <- read_csv("~/Dropbox/mywebsite2/data/Food_Inspections.csv")
View(foodinspect)
foodinspect$Results <- factor(foodinspect$Results)
foodinspect$Results
result <- factor(foodinspect$Results)
#We are only interested in pass/pass w. conditions/fail results. Everything else can be categorized as Others
result <- gsub("No Entry", "Others", foodinspect$Results)
result <- gsub("Not Ready", "Others", result)
result <- gsub("Business Not Located", "Others", result)
result <- gsub("Out of Business", "Others", result)
result <- gsub("Others", "NA", result)
foodinspect2 <- cbind(foodinspect, result)
foodinspect3 <- subset(foodinspect2, foodinspect2[ , 4] > 0)
ggplot(foodinspect2, aes(result)) +
geom_point()
ggplot(data = foodinspect3, aes(x = `Inspection Date`, y = result, color = `License #`)) +
geom_point()
na.rm=TRUE
?grepl
foodinspect3 <- foodinspect3[!grepl("NA", foodinspect3$result),]
View(foodinspect3)
ggplot(data = foodinspect3, aes(x = `Inspection Date`, y = result, color = `License #`)) +
geom_point()
?ts
setwd("~/Dropbox/nae_web")
setwd("~/Dropbox/nae_web")
